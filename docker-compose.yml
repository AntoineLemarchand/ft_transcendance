version: "3.7"

networks:
  frontend:
  backend:

volumes:
  db-transcendence:
    driver_opts:
      type: none
      device: ${POSTGRES_DATAPATH}
      o: bind

services:

  nginx:
    container_name: "nginx"
    image: nginx:1.23
    restart: unless-stopped
    ports:
      - '${SERVER_PORT}:80'
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - frontend
    environment:
      SERVER_HOST: ${SERVER_URL}
    depends_on:
      - front
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost/"]

  front:
    container_name: "react"
    image: "react:transcendence"
    build: ./front
    command: /entrypoint.sh npm run start
    restart: unless-stopped
    init: true
    environment:
      REACT_APP_SERVER_IP: ${SERVER_URL}:${SERVER_PORT}
      REACT_APP_FORTYTWO_CLIENT_ID: ${FORTYTWO_CLIENT_ID}
    volumes:
      - ${PWD}/front:/app
    networks:
      - frontend
    depends_on:
      - back
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:3000"]


  back:
    container_name: "nest"
    image: "nest:transcendence"
    build: ./back/
    command: /entrypoint.sh npm run start:dev
    restart: unless-stopped
    init: true
    volumes:
      - $POSTGRES_DATAPATH:${PGDATA}
      - ${PWD}/back:/app
    networks:
      - frontend
      - backend
    env_file:
        - .env
    depends_on:
      - db
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:3000"]

  db:
    container_name: "postgres"
    image: postgres:15
    restart: unless-stopped
    init: true
    env_file:
        - .env
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${DB_NAME}"]

