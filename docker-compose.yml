version: "3.7"

networks:
  frontend:
  backend:

volumes:
  db-transcendence:
    driver_opts:
      type: none
      device: ${POSTGRES_DATAPATH}
      o: bind

services:

  proxy:
    container_name: "nginx-transcendence"
    image: nginx:1.23
    restart: unless-stopped
    ports:
      - '${SERVER_PORT}:80'
    volumes:
      - ./containers/nginx-transcendence/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - frontend
    environment:
      SERVER_HOST: ${SERVER_URL}
    depends_on:
      - front

  front:
    container_name: "react-transcendence"
    image: "react:transcendence"
    restart: unless-stopped
    init: true
    environment:
      REACT_APP_SERVER_IP: ${SERVER_URL}
      REACT_APP_SERVER_PORT: ${SERVER_PORT}
      REACT_APP_FORTYTWO_CLIENT_ID: ${FORTYTWO_CLIENT_ID}
    networks:
      - frontend
    build:
      context: .
      dockerfile: containers/react-transcendence/Dockerfile
    depends_on:
      - api

  api:
    container_name: "nest-transcendence"
    image: "nest:transcendence"
    restart: unless-stopped
    init: true
    volumes:
      - $POSTGRES_DATAPATH:${PGDATA}
    networks:
      - frontend
      - backend
    env_file:
        - .env
    build:
      context: .
      dockerfile: containers/nest-transcendence/Dockerfile
    depends_on:
      - db

  db:
    container_name: "postgres-transcendence"
    image: postgres:15
    restart: unless-stopped
    init: true
    env_file:
        - .env
    networks:
      - backend
